{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","constants.js","App.js","actions.js","reportWebVitals.js","reducers.js","index.js"],"names":["Card","robot","id","name","email","phone","className","src","alt","width","height","CardList","robots","map","SearchBox","handleSearch","type","placeholder","onChange","CHANGE_SEARCH_FIELD","App","state","fetch","then","res","json","data","setState","catch","e","console","log","message","this","props","searchField","filteredRobots","filter","toLowerCase","includes","length","Component","connect","dispatch","event","text","target","value","payload","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","action","ReactDOM","render","document","getElementById"],"mappings":"qOAgBeA,EAdF,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACJC,EAA0BD,EAA1BC,GAAIC,EAAsBF,EAAtBE,KAAMC,EAAgBH,EAAhBG,MAAOC,EAASJ,EAATI,MACxB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BL,GAAMM,IAAKL,EAAMM,MAAM,MAAMC,OAAO,QACtE,gCACI,6BAAKP,IACL,4BAAIC,IACJ,4BAAIC,WCCLM,EARE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACI,8BACKA,EAAOC,KAAI,SAAAZ,GAAK,OAAI,cAAC,EAAD,CAAMA,MAAOA,GAAYA,EAAMC,UCUjDY,EAdG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKT,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVU,KAAK,SACLb,KAAK,SACLc,YAAY,gBACZC,SAAUH,OCVbI,EAAsB,sBCmB7BC,E,kDACF,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTT,OAAQ,IAHF,E,qDAOd,WAAqB,IAAD,OAChBU,MAAM,8CACDC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAU,EAAKC,SAAS,CAACf,OAAQc,OACtCE,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,EAAEG,c,oBAGpC,WAAU,IACCpB,EAAUqB,KAAKZ,MAAfT,OADF,EAE+BqB,KAAKC,MAAlCC,EAFF,EAEEA,YAAapB,EAFf,EAEeA,aACdqB,EAAiBxB,EAAOyB,QAAO,SAACpC,GAClC,OACIA,EAAME,KAAKmC,cAAcC,SAASJ,EAAYG,gBAC9CrC,EAAMG,MAAMkC,cAAcC,SAASJ,EAAYG,gBAC/CrC,EAAMI,MAAMiC,cAAcC,SAASJ,EAAYG,kBAGvD,OAAQ1B,EAAO4B,OAGX,sBAAKlC,UAAU,KAAf,UACI,oBAAIA,UAAU,kBAAd,0BACA,cAAC,EAAD,CAAWS,aAAcA,IACzB,cAAC,EAAD,CAAUH,OAAQwB,OALtB,oBAAI9B,UAAU,kBAAd,yB,GA1BMmC,aAoEHC,eAhFS,SAAArB,GACpB,MAAO,CACHc,YAAad,EAAMc,gBAIA,SAAAQ,GACvB,MAAO,CACH5B,aAAc,SAAC6B,GAAD,OAAWD,GCbFE,EDa0BD,EAAME,OAAOC,MCb7B,CACrC/B,KAAMG,EACN6B,QAASH,KAFiB,IAACA,MDqFhBH,CAA6CtB,GE3E7C6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCLRO,EAAe,CACjBtB,YAAa,ICQXuB,EAAQC,aDLc,WAAwC,IAAvCtC,EAAsC,uDAA9BoC,EAAcG,EAAgB,uDAAP,GACxD,OAAQA,EAAO5C,MACX,KAAKG,EACD,OAAO,2BAAIE,GAAX,IAAkBc,YAAayB,EAAOZ,UAC1C,QACI,OAAO3B,MCEnBwC,IAASC,OACL,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACI,cAAC,EAAD,MAEFK,SAASC,eAAe,SAC9Bf,M","file":"static/js/main.e1dde113.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Card = ({robot}) => {\r\n    const {id, name, email, phone} = robot\r\n    return (\r\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img src={`https://robohash.org/${id}`} alt={name} width=\"200\" height=\"200\"/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n                <p>{phone}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({robots}) => {\r\n    return (\r\n        <div>\r\n            {robots.map(robot => <Card robot={robot} key={robot.id}/>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList\r\n","import React from 'react'\r\n\r\nconst SearchBox = ({handleSearch}) => {\r\n    return (\r\n        <div className=\"pa2\">\r\n            <input\r\n                className=\"pa3 ba b--green bg-lightest-blue\"\r\n                type=\"search\"\r\n                name=\"search\"\r\n                placeholder=\"Search Robots\"\r\n                onChange={handleSearch}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD'\r\n","import React, {Component} from \"react\";\nimport CardList from \"./Components/CardList\";\nimport SearchBox from \"./Components/SearchBox\";\n// states\nimport {connect} from 'react-redux'\nimport {setSearchField} from \"./actions\"\n\nconst mapStateToProps = state => {\n    return {\n        searchField: state.searchField\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleSearch: (event) => dispatch(setSearchField(event.target.value))\n    }\n}\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            robots: [],\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\n            .then((res) => res.json())\n            .then((data) => this.setState({robots: data}))\n            .catch((e) => console.log(e.message));\n    }\n\n    render() {\n        const {robots} = this.state;\n        const {searchField, handleSearch} = this.props;\n        const filteredRobots = robots.filter((robot) => {\n            return (\n                robot.name.toLowerCase().includes(searchField.toLowerCase()) ||\n                robot.email.toLowerCase().includes(searchField.toLowerCase()) ||\n                robot.phone.toLowerCase().includes(searchField.toLowerCase())\n            );\n        });\n        return !robots.length ? (\n            <h1 className=\"tc white ma3 f1\">Loading</h1>\n        ) : (\n            <div className=\"tc\">\n                <h1 className=\"f1 tc ttu white\">Robo Friends</h1>\n                <SearchBox handleSearch={handleSearch}/>\n                <CardList robots={filteredRobots}/>\n            </div>\n        );\n    }\n}\n\n// const App = () => {\n//     const [allRobots, setAllRobots] = useState([])\n//     const [searchField, setSearchField] = useState('')\n//\n// useEffect(() => {\n//     fetch('https://jsonplaceholder.typicode.com/users')\n//         .then(res => res.json())\n//         .then(data => setAllRobots(data))\n//         .catch(err => console.log(err))\n// }, [])\n//\n//     const handleSearch = (e) => {\n//         setSearchField(e.target.value)\n//     }\n//\n//     const filteredRobots = allRobots.filter(robot => {\n//         return (\n//             robot.name.toLowerCase().includes(searchField.toLowerCase()) ||\n//             robot.email.toLowerCase().includes(searchField.toLowerCase())\n//         )\n//     })\n//\n//     return (\n//         <div className=\"tc\">\n//             <h1 className=\"f1 tc\">Robo Friends</h1>\n//             <SearchBox handleSearch={handleSearch}/>\n//             <CardList robots={filteredRobots}/>\n//         </div>\n//     );\n// }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {CHANGE_SEARCH_FIELD} from './constants'\r\n\r\nexport const setSearchField = (text) => ({\r\n    type: CHANGE_SEARCH_FIELD,\r\n    payload: text\r\n})\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {CHANGE_SEARCH_FIELD} from './constants'\r\n\r\nconst initialState = {\r\n    searchField: ''\r\n}\r\n\r\nexport const searchRobots = (state = initialState, action = {}) => {\r\n    switch (action.type) {\r\n        case CHANGE_SEARCH_FIELD:\r\n            return {...state, searchField: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport {createStore} from 'redux'\nimport 'tachyons';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// reducers\nimport {searchRobots} from './reducers'\n\nconst store = createStore(searchRobots)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>\n    , document.getElementById('root'));\nreportWebVitals();\n"],"sourceRoot":""}